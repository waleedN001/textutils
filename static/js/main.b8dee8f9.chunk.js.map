{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","prop","react_default","a","createElement","className","concat","mode","href","tittle","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","abouttext","onClick","toggleMode","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","style","color","font","placeholder","value","onChange","event","console","log","target","rows","showAlert","newText","split","map","currentValue","toUpperCase","slice","join","alert","newtext","toLowerCase","Alert","role","word","lower","charAt","captalize","msg","App","setMode","_useState3","_useState4","setAlert","document","body","backgroundColor","Color","massage","setTimeout","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.b8dee8f9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar(prop) {\r\n  return (\r\n    <div>\r\n    <nav className= {`navbar navbar-expand-lg navbar-${prop.mode} bg-${prop.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{prop.tittle}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\" navbar-nav text-Center me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">{prop.abouttext}</a>\r\n        </li>\r\n        </ul>\r\n        \r\n      <form className=\"d-flex justify-content-start\">\r\n        <button type=\"button\"  onClick={prop.toggleMode} className={`btn btn-${prop.mode==='light'?'dark':'light'} mx-2`}>changeMode</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  );\r\n}","import React, {useState} from 'react';\r\nexport default function TextForm(prop) {\r\n  const handleOnChange = (event) =>{\r\n    console.log(\"handle On Change is clicked.\");\r\n    setText(event.target.value);\r\n  }\r\n  const changeIntoUpperCase = ()=>{\r\n    console.log(\"change Into Upper Case is clicked.\")\r\n    let newtext= text.toUpperCase();\r\n    setText(newtext);\r\n   prop.showAlert('your entered Texet converted in to Upper Case', \"success\");\r\n  }\r\n  const changeIntoLowerCase = ()=>{\r\n    console.log(\"change Into Lower Case is clicked.\")\r\n    let newtext= text.toLowerCase();\r\n    setText(newtext);\r\n    prop.showAlert('your entered Texet converted in to Lower Case', \"success\");\r\n  }\r\n  const clearText =()=>{\r\n    console.log(\"clear text funcation is clicked.\");\r\n    setText(\"\");\r\n    prop.showAlert('Are you sure to clear your entered text', \"success\");\r\n  }\r\nconst fistLatterInUpperCaseOfNewSentence = () => {\r\n        let newText = text.split(\". \").map((currentValue) => {\r\n            let newText = currentValue[0].toUpperCase() + currentValue.slice(1);\r\n            return newText;\r\n        });\r\n        setText(newText.join(\". \"));\r\n        \r\n  alert(\"your text is captalised as first latter of new sentence is change into upperCase\");\r\n    }\r\nconst colorText={\r\n  color: '#131c03',\r\n  font:'bold',\r\n}\r\n  const [text,setText] = useState();\r\n\r\n  return (\r\n    <>\r\n    <div>\r\n        <h1>{prop.heading}</h1>\r\n        <div className=\"mb-8\">\r\n        <textarea className=\"form-control mx-auto bg-#87919c\" style={colorText} id=\"textBox\" placeholder='enter your text here...' value={text} onChange={handleOnChange} rows=\"8\"></textarea>\r\n        </div>\r\n        <button className={`btn btn-primary btn-${prop.mode} my-3 mx-3`} onClick={clearText}>remove text</button>\r\n        <button className={`btn btn-primary btn-${prop.mode} my-3 mx-3`} onClick={fistLatterInUpperCaseOfNewSentence}>Capitalized </button>\r\n        <button className={`btn btn-primary btn-${prop.mode} my-3 mx-3`} onClick={changeIntoUpperCase}>Convert into UpperCase</button>\r\n        <button className={`btn btn-primary btn-${prop.mode} my-3 mx-3`} onClick={changeIntoLowerCase}>Convert into LowerCase</button>\r\n    </div>\r\n    <div className=\"container\">\r\n      <h1>your text summary</h1>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Alert(prop) {\r\nconst captalize=(word)=>{\r\n  const lower= word.toLowerCase();\r\n  return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n}\r\n\r\n  return (\r\n    prop.alert &&\r\n    <div>\r\n     <div className={`alert alert-${prop.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n         <strong>{captalize(prop.alert.type)}</strong> : {prop.alert.msg}\r\n</div>\r\n    </div>\r\n  );\r\n}\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\nfunction App() {\n  const [mode, setMode] = useState('dark');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert=(type, massage)=>{\n    setAlert({\n    type: type,\n    msg: massage\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#cbcfd4';\n      document.body.style.Color=\"black\";   \n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='#c4fffc';   \n      document.body.style.Color=\"white\";   \n    }\n  }\n  return (\n    <>\n    <Alert alert={alert}/>\n    <Navbar tittle=\"Text Tutiles\" mode={mode} toggleMode={toggleMode}/>\n    <div className=\"container bg-yellow my-3\">\n      <TextForm showAlert={showAlert} heading=\"Enter your text in Below Form\"mode={mode}/>\n      </div>\n      \n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}